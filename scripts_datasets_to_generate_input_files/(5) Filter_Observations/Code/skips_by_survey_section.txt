libname cost '/shares/SSB_Cost_Survey/Ardini_Cost_Survey/SAS_Cost_Survey/Profitability_Profiles/Calculate_Profit/Response_Inclusion_Exclusion';
libname drop_1 '/shares/SSB_Cost_Survey/Ardini_Cost_Survey/SAS_Cost_Survey/Profitability_Profiles/Calculate_Profit/Response_Inclusion_Exclusion/drop/process_1';
libname drop_2 '/shares/SSB_Cost_Survey/Ardini_Cost_Survey/SAS_Cost_Survey/Profitability_Profiles/Calculate_Profit/Response_Inclusion_Exclusion/drop/process_2';
libname count '/shares/SSB_Cost_Survey/Ardini_Cost_Survey/SAS_Cost_Survey/Profitability_Profiles/Calculate_Profit/Response_Inclusion_Exclusion/count_question_responses';

libname rev '/shares/SSB_Cost_Survey/Ardini_Cost_Survey/SAS_Cost_Survey/Profitability_Profiles/Calculate_Profit/Revenues/Annual_Hullid';

data all; set cost.final_response_dataset_04_17; /*This dataset is the same as ICFnoaa2023vessel_final_CLEAN_04.17.2024_FINAL_PROFITS*/

/*-888888888 (or fewer 8s): Skip*/
/*-969696969: Question not presented*/
/*-979797979: Question in grid row not selected*/

/***Skips by Section***/
data all_2; set all; /*422 obs.*/

data all_3; set all_2; 
if REFUSAL_INELIGIBLE_PARTIAL=0; 
if Complete_1=1;
permit_1 = strip(put(permit, 6.)); drop permit;
/*367 obs. after filtering out responses that were not Complete_1=1 and REFUSAL_INELIGIBLE_PARTIAL=0*/

data cost.all_4; set all_3; 
if vessel_activity in ('INACTIVE', 'REC_OR_OTHER') then delete; /*These two options skip the trip expense and crew payment section of the survey and would be dropped anyway*/
proc sort; by permit_1;
/*333 obs. after filtering out responses from inactive vessels according to survey question 2*/

data revenue; set rev.final_revenue; 
permit_1 = strip(put(permit, 6.)); drop permit;
keep permit_1 primary_comm_gear_2022;
proc sort; by permit_1;

data cost.starting_point; 
merge cost.all_4 (in=inone) revenue (in=intwo);
by permit_1;
if inone=1; if intwo=1;
if primary_comm_gear_2022 in ('No Revenue', 'Recreational') then delete; /*This covers all cases where commercial_revenue=0*/
proc sort; by icf_master_id;
/*321 obs. after filtering out vessels that had no revenue during 2022. All responses have vessel_activity = 'COMMERCIAL'*/



/***Process 1: Drop any observation that has any 2 survey sections skipped***/
/*Section 1: New/Replacement, Repair/Maintenance, Upgrade Costs*/
data drop_1.section_1; set cost.starting_point; /*318 obs. out of 321 (Eliminates 3 obs.)*/
if rmui_engine_exp<0 then do;
if rmui_seine_skiff_exp<0 then do;
if rmui_deck_eqpt_exp<0 then do;
if rmui_haulout_cost<0 then do;
if rmui_hull_exp<0 then do;
if rmui_fishing_gear_exp<0 then do;
if rmui_wheel_electronics_exp<0 then do;
if rmui_process_refrig_exp<0 then do;
if rmui_safety_eqpt_exp<0 then delete; 
end;end;end;end;end;end;end;end;/*8*/


/*Section 2: Vessel Costs*/
data drop_1.section_2; set cost.starting_point; /*315 obs. out of 321*/
if mooring_fees<0 then do;
if ifq_recovery_cost<0 then do;
if vessel_or_permit_pymt<0 then do;
if permit_fees<0 then do;
if trailer_launch_fees<0 then do;
if vessel_insurance_cost<0 then delete;
end;end;end;end;end;/*5*/


/*Section 3: Trip Expenses*/
data drop_1.section_3; set cost.starting_point; /*310 obs. out of 321*/
if fuel_cost<0 then do;	
if bait_cost<0 then do;	
if food_cost<0 then do;	
if ice_cost<0 then do;	
if catch_handling_cost<0 then do;	
if at_sea_processing_cost<0 then do;	
if paralytic_testing<0 then do;	
if fuel_avg_trip_cost<0 then do;	
if bait_avg_trip_cost<0 then do;	
if food_avg_trip_cost<0 then do;	
if ice_avg_trip_cost<0 then do;	
if catch_handling_avg_trip_cost<0 then do;	
if packing_avg_trip_cost<0 then do;	
if paralytic_avg_trip_cost<0 then delete;
end;end;end;end;end;end;end;end;end;end;end;end;end;/*13*/

/*Section 4: Crew Payment System*/
data drop_1.section_4; set cost.starting_point; /*302 obs. out of 321*/
if crew_captain_present in (-888, -969696969) then do;
if crew_pymts<0 then do;
if captain_pymts<0 then do;	
if crew_benefits<0 then delete;
end;end;end;

/*Section 5: Overhead Costs*/
data drop_1.section_5; set cost.starting_point; /*299 obs. out of 321*/
if vehicle_usage_cost<0 then do;		
if business_travel_cost<0 then do;		
if association_fees<0 then do;		
if legal_fees<0 then do;		
if advertising_cost<0 then do;		
if communication_cost<0 then do;		
if office_expenses<0 then do;		
if noncrew_labor_cost<0 then do;		
if spotter_plane_cost<0 then do;		
if vehicle_usage_cost_allves<0 then do;		
if business_travel_cost_allves<0 then do;		
if association_fees_allves<0 then do;		
if legal_fees_allves<0 then do;		
if advertising_cost_allves<0 then do;		
if communication_cost_allves<0 then do;		
if office_expenses_allves<0 then do;		
if noncrew_labor_cost_allves<0 then do;		
if spotter_plane_cost_allves<0 then delete;	
end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;/*17*/

/*Excluded Observations*/

/*Section 1: New/Replacement, Repair/Maintenance, Upgrade Costs*/
data sp_1; set cost.starting_point; keep icf_master_id; proc sort; by icf_master_id;

data drop_section_1; set drop_1.section_1; keep icf_master_id; proc sort; by icf_master_id;

data drop_1.dropped_obs_section_1;
merge sp_1 (in=inone) drop_section_1 (in=intwo);
by icf_master_id;
if inone=1; if intwo=0;

/*Section 2: Vessel Costs*/
data sp_2; set cost.starting_point; keep icf_master_id; proc sort; by icf_master_id;

data drop_section_2; set drop_1.section_2; keep icf_master_id; proc sort; by icf_master_id;

data drop_1.dropped_obs_section_2;
merge sp_2 (in=inone) drop_section_2 (in=intwo);
by icf_master_id;
if inone=1; if intwo=0;

/*Section 3: Trip Expenses*/
data sp_3; set cost.starting_point; keep icf_master_id; proc sort; by icf_master_id;

data drop_section_3; set drop_1.section_3; keep icf_master_id; proc sort; by icf_master_id;

data drop_1.dropped_obs_section_3;
merge sp_3 (in=inone) drop_section_3 (in=intwo);
by icf_master_id;
if inone=1; if intwo=0;

/*Section 4: Crew Payment System*/
data sp_4; set cost.starting_point; keep icf_master_id; proc sort; by icf_master_id;

data drop_section_4; set drop_1.section_4; keep icf_master_id; proc sort; by icf_master_id;

data drop_1.dropped_obs_section_4;
merge sp_4 (in=inone) drop_section_4 (in=intwo);
by icf_master_id;
if inone=1; if intwo=0;

/*Section 5: Overhead Costs*/
data sp_5; set cost.starting_point; keep icf_master_id; proc sort; by icf_master_id;

data drop_section_5; set drop_1.section_5; keep icf_master_id; proc sort; by icf_master_id;

data drop_1.dropped_obs_section_5;
merge sp_5 (in=inone) drop_section_5 (in=intwo);
by icf_master_id;
if inone=1; if intwo=0;


/*COMBINE*/
data drop_1.dropped_1_2; /*2 obs.*/
merge drop_1.dropped_obs_section_1 (in=inone) drop_1.dropped_obs_section_2 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;

data drop_1.dropped_1_3; /*0 obs.*/
merge drop_1.dropped_obs_section_1 (in=inone) drop_1.dropped_obs_section_3 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;

data drop_1.dropped_1_4; /*0 obs.*/
merge drop_1.dropped_obs_section_1 (in=inone) drop_1.dropped_obs_section_4 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;

data drop_1.dropped_1_5; /*0 obs.*/
merge drop_1.dropped_obs_section_1 (in=inone) drop_1.dropped_obs_section_5 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;


data drop_1.dropped_2_3; /*4 obs.*/
merge drop_1.dropped_obs_section_2 (in=inone) drop_1.dropped_obs_section_3 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;

data drop_1.dropped_2_4; /*4 obs.*/
merge drop_1.dropped_obs_section_2 (in=inone) drop_1.dropped_obs_section_4 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;

data drop_1.dropped_2_5; /*4 obs.*/
merge drop_1.dropped_obs_section_2 (in=inone) drop_1.dropped_obs_section_5 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;


data drop_1.dropped_3_4; /*11 obs.*/
merge drop_1.dropped_obs_section_3 (in=inone) drop_1.dropped_obs_section_4 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;

data drop_1.dropped_3_5; /*11 obs.*/
merge drop_1.dropped_obs_section_3 (in=inone) drop_1.dropped_obs_section_5 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;


data drop_1.dropped_4_5; /*15 obs.*/
merge drop_1.dropped_obs_section_4 (in=inone) drop_1.dropped_obs_section_5 (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;


data drop_1.process_1_final_dropped_obs; /*17 observations to drop from starting point*/
set 
drop_1.dropped_1_2
drop_1.dropped_1_3
drop_1.dropped_1_4
drop_1.dropped_1_5
drop_1.dropped_2_3
drop_1.dropped_2_4
drop_1.dropped_2_5
drop_1.dropped_3_4
drop_1.dropped_3_5
drop_1.dropped_4_5;
proc sort nodupkey; by icf_master_id;

/***304 OBSERVATIONS REMAIN***/




/***Process 2: Drop any observation that has any 1 survey section skipped (cumulative drops by section)***/

/*Section 1: New/Replacement, Repair/Maintenance, Upgrade Costs*/
data drop_2.section_1; set cost.starting_point; /*318 obs. Eliminates 3 obs.*/
if rmui_engine_exp<0 then do;
if rmui_seine_skiff_exp<0 then do;
if rmui_deck_eqpt_exp<0 then do;
if rmui_haulout_cost<0 then do;
if rmui_hull_exp<0 then do;
if rmui_fishing_gear_exp<0 then do;
if rmui_wheel_electronics_exp<0 then do;
if rmui_process_refrig_exp<0 then do;
if rmui_safety_eqpt_exp<0 then delete; 
end;end;end;end;end;end;end;end;/*8*/

/*Section 2: Vessel Costs*/
data drop_2.section_2; set drop_2.section_1; /*314 obs. Eliminates 4 obs.*/
if mooring_fees<0 then do;
if ifq_recovery_cost<0 then do;
if vessel_or_permit_pymt<0 then do;
if permit_fees<0 then do;
if trailer_launch_fees<0 then do;
if vessel_insurance_cost<0 then delete;
end;end;end;end;end;/*5*/

/*Section 3: Trip Expenses*/
data drop_2.section_3; set drop_2.section_2; /*307 obs. Eliminates 7 obs.*/
if fuel_cost<0 then do;	
if bait_cost<0 then do;	
if food_cost<0 then do;	
if ice_cost<0 then do;	
if catch_handling_cost<0 then do;	
if at_sea_processing_cost<0 then do;	
if paralytic_testing<0 then do;	
if fuel_avg_trip_cost<0 then do;	
if bait_avg_trip_cost<0 then do;	
if food_avg_trip_cost<0 then do;	
if ice_avg_trip_cost<0 then do;	
if catch_handling_avg_trip_cost<0 then do;	
if packing_avg_trip_cost<0 then do;	
if paralytic_avg_trip_cost<0 then delete;
end;end;end;end;end;end;end;end;end;end;end;end;end;/*13*/

/*Section 4: Crew Payment System*/
data data drop_2.section_4; set drop_2.section_3; /*299 obs. Eliminates 8 obs.*/
if crew_captain_present in (-888, -969696969) then do;
if crew_pymts<0 then do;
if captain_pymts<0 then do;	
if crew_benefits<0 then delete;
end;end;end;

/*Section 5: Overhead Costs*/
data drop_2.section_5; set drop_2.section_4; /*292 obs. Eliminates 7 obs.*/
if vehicle_usage_cost<0 then do;		
if business_travel_cost<0 then do;		
if association_fees<0 then do;		
if legal_fees<0 then do;		
if advertising_cost<0 then do;		
if communication_cost<0 then do;		
if office_expenses<0 then do;		
if noncrew_labor_cost<0 then do;		
if spotter_plane_cost<0 then do;		
if vehicle_usage_cost_allves<0 then do;		
if business_travel_cost_allves<0 then do;		
if association_fees_allves<0 then do;		
if legal_fees_allves<0 then do;		
if advertising_cost_allves<0 then do;		
if communication_cost_allves<0 then do;		
if office_expenses_allves<0 then do;		
if noncrew_labor_cost_allves<0 then do;		
if spotter_plane_cost_allves<0 then delete;	
end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;end;/*17*/
data section_5; set drop_2.section_5;
keep icf_master_id;
proc sort; by icf_master_id;

data drop_2.process_2_final_dropped_obs; /*29 observations to drop from starting point*/
merge cost.starting_point (in=inone) section_5 (in=intwo);
by icf_master_id; 
if inone=1; if intwo=0;
keep icf_master_id; 

/***292 OBSERVATIONS REMAIN***/

/*Section 6: Quota Costs and Revenues for the Selected Vessel*/



/*** Visual inspection of the observations dropped in process_1***/
data vis_1; set cost.starting_point; proc sort; by icf_master_id;
data drop_1.vis_inspection_process_1_drops;
merge vis_1 (in=inone) drop_1.process_1_final_dropped_obs (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;
/*Decided that these 16 observations are not worth including given the lack of information. Brings down the number of usable observations to 300*/

/*** Visual inspection of the observations dropped in process_2*/
data process_1; set drop_1.process_1_final_dropped_obs; proc sort; by icf_master_id;
data starting_point_process_1; set cost.starting_point; proc sort; by icf_master_id;

data drop_1.process_1_retained_obs; /*304 obs. This dataset retains all the survey questions*/
merge process_1 (in=inone) starting_point_process_1 (in=intwo);
by icf_master_id;
if inone=0; if intwo=1;
proc sort; by icf_master_id;

data drop_2.process_2_retained_obs; /*292 obs.*/
set drop_2.section_5; 
keep icf_master_id; 
proc sort; by icf_master_id; 

data drop_2.process_2_dropped_obs; /*12 obs.*/
merge drop_1.process_1_retained_obs (in=inone) drop_2.process_2_retained_obs (in=intwo);
by icf_master_id;
if inone=1; if intwo=0;



/*** Count the number of question responses for the starting point dataset***/
data count.questions_answered; set cost.starting_point;
/*Section 1*/ 
if rmui_engine_exp>0 then q1_answered=1;
else q1_answered=0;
if rmui_engine_exp>=0 then q1_0_answered=1;
else q1_0_answered=0;

if rmui_seine_skiff_exp>0 then q2_answered=1;
else q2_answered=0;
if rmui_seine_skiff_exp>=0 then q2_0_answered=1;
else q2_0_answered=0;

if rmui_deck_eqpt_exp>0 then q3_answered=1;
else q3_answered=0;
if rmui_deck_eqpt_exp>=0 then q3_0_answered=1;
else q3_0_answered=0;

if rmui_haulout_cost>0 then q4_answered=1;
else q4_answered=0;
if rmui_haulout_cost>=0 then q4_0_answered=1;
else q4_0_answered=0;

if rmui_hull_exp>0 then q5_answered=1;
else q5_answered=0;
if rmui_hull_exp>=0 then q5_0_answered=1;
else q5_0_answered=0;

if rmui_fishing_gear_exp>0 then q6_answered=1;
else q6_answered=0;
if rmui_fishing_gear_exp>=0 then q6_0_answered=1;
else q6_0_answered=0;

if rmui_wheel_electronics_exp>0 then q7_answered=1;
else q7_answered=0;
if rmui_wheel_electronics_exp>=0 then q7_0_answered=1;
else q7_0_answered=0;

if rmui_process_refrig_exp>0 then q8_answered=1;
else q8_answered=0;
if rmui_process_refrig_exp>=0 then q8_0_answered=1;
else q8_0_answered=0;

if rmui_safety_eqpt_exp>0 then q9_answered=1;
else q9_answered=0;
if rmui_safety_eqpt_exp>=0 then q9_0_answered=1;
else q9_0_answered=0;

if q1_answered +
q2_answered +
q3_answered +
q4_answered +
q5_answered +
q6_answered +
q7_answered +
q8_answered +
q9_answered > 0 then sect_1_answered = 1;
else sect_1_answered = 0;

if q1_0_answered +
q2_0_answered +
q3_0_answered +
q4_0_answered +
q5_0_answered +
q6_0_answered +
q7_0_answered +
q8_0_answered +
q9_0_answered > 0 then sect_1_0_answered = 1;
else sect_1_0_answered = 0;


/*Section 2*/ 
if mooring_fees>0 then q10_answered=1;
else q10_answered=0;
if mooring_fees>=0 then q10_0_answered=1;
else q10_0_answered=0;

if ifq_recovery_cost>0 then q11_answered=1;
else q11_answered=0;
if ifq_recovery_cost>=0 then q11_0_answered=1;
else q11_0_answered=0;

if vessel_or_permit_pymt>0 then q12_answered=1;
else q12_answered=0;
if vessel_or_permit_pymt>=0 then q12_0_answered=1;
else q12_0_answered=0;

if permit_fees>0 then q13_answered=1;
else q13_answered=0;
if permit_fees>=0 then q13_0_answered=1;
else q13_0_answered=0;

if trailer_launch_fees>0 then q14_answered=1;
else q14_answered=0;
if trailer_launch_fees>=0 then q14_0_answered=1;
else q14_0_answered=0;

if vessel_insurance_cost>0 then q15_answered=1;
else q15_answered=0;
if vessel_insurance_cost>=0 then q15_0_answered=1;
else q15_0_answered=0;

if q10_answered +
q11_answered +
q12_answered +
q13_answered +
q14_answered +
q15_answered > 0 then sect_2_answered = 1;
else sect_2_answered = 0;

if q10_0_answered +
q11_0_answered +
q12_0_answered +
q13_0_answered +
q14_0_answered +
q15_0_answered > 0 then sect_2_0_answered = 1;
else sect_2_0_answered = 0;


/*Section 3*/ 
if fuel_cost>0 then q16_answered=1;
else q16_answered=0;
if fuel_cost>=0 then q16_0_answered=1;
else q16_0_answered=0;

if bait_cost>0 then q17_answered=1;
else q17_answered=0;
if bait_cost>=0 then q17_0_answered=1;
else q17_0_answered=0;

if food_cost>0 then q18_answered=1;
else q18_answered=0;
if food_cost>=0 then q18_0_answered=1;
else q18_0_answered=0;

if ice_cost>0 then q19_answered=1;
else q19_answered=0;
if ice_cost>=0 then q19_0_answered=1;
else q19_0_answered=0;

if catch_handling_cost>0 then q20_answered=1;
else q20_answered=0;
if catch_handling_cost>=0 then q20_0_answered=1;
else q20_0_answered=0;

if at_sea_processing_cost>0 then q21_answered=1;
else q21_answered=0;
if at_sea_processing_cost>=0 then q21_0_answered=1;
else q21_0_answered=0;

if paralytic_testing>0 then q22_answered=1;
else q22_answered=0;
if paralytic_testing>=0 then q22_0_answered=1;
else q22_0_answered=0;

if fuel_avg_trip_cost>0 then q23_answered=1;
else q23_answered=0;
if fuel_avg_trip_cost>=0 then q23_0_answered=1;
else q23_0_answered=0;

if bait_avg_trip_cost>0 then q24_answered=1;
else q24_answered=0;
if bait_avg_trip_cost>=0 then q24_0_answered=1;
else q24_0_answered=0;

if food_avg_trip_cost>0 then q25_answered=1;
else q25_answered=0;
if food_avg_trip_cost>=0 then q25_0_answered=1;
else q25_0_answered=0;

if ice_avg_trip_cost>0 then q26_answered=1;
else q26_answered=0;
if ice_avg_trip_cost>=0 then q26_0_answered=1;
else q26_0_answered=0;

if catch_handling_avg_trip_cost>0 then q27_answered=1;
else q27_answered=0;
if catch_handling_avg_trip_cost>=0 then q27_0_answered=1;
else q27_0_answered=0;

if packing_avg_trip_cost>0 then q28_answered=1;
else q28_answered=0;
if packing_avg_trip_cost>=0 then q28_0_answered=1;
else q28_0_answered=0;

if paralytic_avg_trip_cost>0 then q29_answered=1;
else q29_answered=0;
if paralytic_avg_trip_cost>=0 then q29_0_answered=1;
else q29_0_answered=0;

if q16_answered +
q17_answered +
q18_answered +
q19_answered +
q20_answered +
q21_answered +
q22_answered +
q23_answered +
q24_answered +
q25_answered +
q26_answered +
q27_answered +
q28_answered +
q29_answered > 0 then sect_3_answered = 1;
else sect_3_answered = 0;

if q16_0_answered +
q17_0_answered +
q18_0_answered +
q19_0_answered +
q20_0_answered +
q21_0_answered +
q22_0_answered +
q23_0_answered +
q24_0_answered +
q25_0_answered +
q26_0_answered +
q27_0_answered +
q28_0_answered +
q29_0_answered > 0 then sect_3_0_answered = 1;
else sect_3_0_answered = 0;


/*Section 4*/ 
if crew_captain_present not in (-888, -969696969) then pre_q30_answered=1;
else pre_q30_answered=0;

if crew_pymts>0 then q30_answered=1;
else q30_answered=0;
if crew_pymts>=0 then q30_0_answered=1;
else q30_0_answered=0;

if captain_pymts>0 then q31_answered=1;
else q31_answered=0;
if captain_pymts>=0 then q31_0_answered=1;
else q31_0_answered=0;

if crew_benefits>0 then q32_answered=1;
else q32_answered=0;
if crew_benefits>=0 then q32_0_answered=1;
else q32_0_answered=0;

if pre_q30_answered +
q30_answered +
q31_answered +
q32_answered > 0 then sect_4_answered = 1;
else sect_4_answered = 0;

if pre_q30_answered +
q30_0_answered +
q31_0_answered +
q32_0_answered > 0 then sect_4_0_answered = 1;
else sect_4_0_answered = 0;


/*Section 5*/ 
if vehicle_usage_cost>0 then q33_answered=1;
else q33_answered=0;
if vehicle_usage_cost>=0 then q33_0_answered=1;
else q33_0_answered=0;

if business_travel_cost>0 then q34_answered=1;
else q34_answered=0;
if business_travel_cost>=0 then q34_0_answered=1;
else q34_0_answered=0;

if association_fees>0 then q35_answered=1;
else q35_answered=0;
if association_fees>=0 then q35_0_answered=1;
else q35_0_answered=0;

if legal_fees>0 then q36_answered=1;
else q36_answered=0;
if legal_fees>=0 then q36_0_answered=1;
else q36_0_answered=0;

if advertising_cost>0 then q37_answered=1;
else q37_answered=0;
if advertising_cost>=0 then q37_0_answered=1;
else q37_0_answered=0;

if communication_cost>0 then q38_answered=1;
else q38_answered=0;
if communication_cost>=0 then q38_0_answered=1;
else q38_0_answered=0;

if office_expenses>0 then q39_answered=1;
else q39_answered=0;
if office_expenses>=0 then q39_0_answered=1;
else q39_0_answered=0;

if noncrew_labor_cost>0 then q40_answered=1;
else q40_answered=0;
if noncrew_labor_cost>=0 then q40_0_answered=1;
else q40_0_answered=0;

if spotter_plane_cost>0 then q41_answered=1;
else q41_answered=0;
if spotter_plane_cost>=0 then q41_0_answered=1;
else q41_0_answered=0;

if vehicle_usage_cost_allves>0 then q42_answered=1;
else q42_answered=0;
if vehicle_usage_cost_allves>=0 then q42_0_answered=1;
else q42_0_answered=0;

if business_travel_cost_allves>0 then q43_answered=1;
else q43_answered=0;
if business_travel_cost_allves>=0 then q43_0_answered=1;
else q43_0_answered=0;

if association_fees_allves>0 then q44_answered=1;
else q44_answered=0;
if association_fees_allves>=0 then q44_0_answered=1;
else q44_0_answered=0;

if legal_fees_allves>0 then q45_answered=1;
else q45_answered=0;
if legal_fees_allves>=0 then q45_0_answered=1;
else q45_0_answered=0;

if advertising_cost_allves>0 then q46_answered=1;
else q46_answered=0;
if advertising_cost_allves>=0 then q46_0_answered=1;
else q46_0_answered=0;

if communication_cost_allves>0 then q47_answered=1;
else q47_answered=0;
if communication_cost_allves>=0 then q47_0_answered=1;
else q47_0_answered=0;

if office_expenses_allves>0 then q48_answered=1;
else q48_answered=0;
if office_expenses_allves>=0 then q48_0_answered=1;
else q48_0_answered=0;

if noncrew_labor_cost_allves>0 then q49_answered=1;
else q49_answered=0;
if noncrew_labor_cost_allves>=0 then q49_0_answered=1;
else q49_0_answered=0;

if spotter_plane_cost_allves>0 then q50_answered=1;
else q50_answered=0;
if spotter_plane_cost_allves>=0 then q50_0_answered=1;
else q50_0_answered=0;

if q33_answered +
q34_answered +
q35_answered +
q36_answered +
q37_answered +
q38_answered +
q39_answered +
q40_answered +
q41_answered +
q42_answered +
q43_answered +
q44_answered +
q45_answered +
q46_answered +
q47_answered +
q48_answered +
q49_answered +
q50_answered > 0 then sect_5_answered = 1;
else sect_5_answered = 0;

if q33_0_answered +
q34_0_answered +
q35_0_answered +
q36_0_answered +
q37_0_answered +
q38_0_answered +
q39_0_answered +
q40_0_answered +
q41_0_answered +
q42_0_answered +
q43_0_answered +
q44_0_answered +
q45_0_answered +
q46_0_answered +
q47_0_answered +
q48_0_answered +
q49_0_answered +
q50_0_answered > 0 then sect_5_0_answered = 1;
else sect_5_0_answered = 0;


/*Tally questions answered*/
questions_answered_positive =
q1_answered+
q2_answered+
q3_answered+
q4_answered+
q5_answered+
q6_answered+
q7_answered+
q8_answered+
q9_answered+
q10_answered+
q11_answered+
q12_answered+
q13_answered+
q14_answered+
q15_answered+
q16_answered+
q17_answered+
q18_answered+
q19_answered+
q20_answered+
q21_answered+
q22_answered+
q23_answered+
q24_answered+
q25_answered+
q26_answered+
q27_answered+
q28_answered+
q29_answered+
pre_q30_answered+
q30_answered+
q31_answered+
q32_answered+
q33_answered+
q34_answered+
q35_answered+
q36_answered+
q37_answered+
q38_answered+
q39_answered+
q40_answered+
q41_answered+
q42_answered+
q43_answered+
q44_answered+
q45_answered+
q46_answered+
q47_answered+
q48_answered+
q49_answered+
q50_answered;


questions_answered_0_positive =
q1_0_answered+
q2_0_answered+
q3_0_answered+
q4_0_answered+
q5_0_answered+
q6_0_answered+
q7_0_answered+
q8_0_answered+
q9_0_answered+
q10_0_answered+
q11_0_answered+
q12_0_answered+
q13_0_answered+
q14_0_answered+
q15_0_answered+
q16_0_answered+
q17_0_answered+
q18_0_answered+
q19_0_answered+
q20_0_answered+
q21_0_answered+
q22_0_answered+
q23_0_answered+
q24_0_answered+
q25_0_answered+
q26_0_answered+
q27_0_answered+
q28_0_answered+
q29_0_answered+
pre_q30_answered+
q30_0_answered+
q31_0_answered+
q32_0_answered+
q33_0_answered+
q34_0_answered+
q35_0_answered+
q36_0_answered+
q37_0_answered+
q38_0_answered+
q39_0_answered+
q40_0_answered+
q41_0_answered+
q42_0_answered+
q43_0_answered+
q44_0_answered+
q45_0_answered+
q46_0_answered+
q47_0_answered+
q48_0_answered+
q49_0_answered+
q50_0_answered;


/***Summarize***/
data count.questions_answered_2;  
retain icf_master_id  last_question_filled  questions_answered_positive  questions_answered_0_positive
sect_1_0_answered  sect_2_0_answered  sect_3_0_answered  sect_4_0_answered  sect_5_0_answered;
set count.questions_answered;
keep icf_master_id  last_question_filled  questions_answered_positive  questions_answered_0_positive
sect_1_0_answered  sect_2_0_answered  sect_3_0_answered  sect_4_0_answered  sect_5_0_answered;
proc sort; by icf_master_id;

data process_1_drops; set drop_1.process_1_final_dropped_obs; 
process_1_drop=1;
proc sort; by icf_master_id;

data process_2_drops; set drop_2.process_2_final_dropped_obs; 
process_2_drop=1;
proc sort; by icf_master_id;

data count.questions_answered_final;
merge count.questions_answered_2  process_1_drops  process_2_drops;
by icf_master_id;


data process_1_only_retained_obs; set drop_2.process_2_dropped_obs; /*cost.process_1_only_retained_obs*/ /*12 obs.*/
keep icf_master_id;
proc sort; by icf_master_id;

data count.q_answered_process_1_only;
merge count.questions_answered_final (in=inone) process_1_only_retained_obs (in=intwo);
by icf_master_id;
if inone=1; if intwo=1;


/*match primary gear*/

data prim_gear; set rev.final_revenue; keep icf_master_id primary_comm_gear_2022;
proc sort; by icf_master_id;

data questions_answered_final_gear;
merge count.questions_answered_final (in=inone) prim_gear;
by icf_master_id; if inone=1;

data count.questions_answered_final_gear;
retain icf_master_id  primary_comm_gear_2022  process_1_drop  process_2_drop  last_question_filled  questions_answered_positive  questions_answered_0_positive
sect_1_0_answered  sect_2_0_answered  sect_3_0_answered  sect_4_0_answered  sect_5_0_answered;
set questions_answered_final_gear;
keep   icf_master_id  primary_comm_gear_2022  process_1_drop  process_2_drop  last_question_filled  questions_answered_positive  questions_answered_0_positive
sect_1_0_answered  sect_2_0_answered  sect_3_0_answered  sect_4_0_answered  sect_5_0_answered;
proc sort; by descending questions_answered_0_positive;


data answered_process_1_only_gear;
merge count.q_answered_final_process_1_only (in=inone) prim_gear;
by icf_master_id; if inone=1;

data count.answered_process_1_only_gear;
retain icf_master_id  primary_comm_gear_2022  process_1_drop  process_2_drop  last_question_filled  questions_answered_positive  questions_answered_0_positive
sect_1_0_answered  sect_2_0_answered  sect_3_0_answered  sect_4_0_answered  sect_5_0_answered;
set answered_process_1_only_gear;
keep   icf_master_id  primary_comm_gear_2022  process_1_drop  process_2_drop  last_question_filled  questions_answered_positive  questions_answered_0_positive
sect_1_0_answered  sect_2_0_answered  sect_3_0_answered  sect_4_0_answered  sect_5_0_answered;
proc sort; by descending questions_answered_0_positive;


/*51 questions. Number of cost questions that can possibly be answered on multiple gear survey is 31 (51-20)*/

/*Not considering quota/DAS payments since only 33 respondents have a "YES" answer to "lease_quota_das_y_or_n"*/ 

/*20 Questions that that can not be answered in the multiple gear survey (assuming respondent fills in annual trip expenses and overhead costs for the selected vessel)*/
/*rmui_seine_skiff_exp
ifq_recovery_cost
trailer_launch_fees
paralytic_testing
fuel_avg_trip_cost
bait_avg_trip_cost
food_avg_trip_cost
ice_avg_trip_cost
catch_handling_avg_trip_cost
packing_avg_trip_cost
paralytic_avg_trip_cost
vehicle_usage_cost_allves
business_travel_cost_allves
association_fees_allves
legal_fees_allves
advertising_cost_allves
communication_cost_allves
office_expenses_allves
noncrew_labor_cost_allves
spotter_plane_cost_allves*/


/*
17972412E (Pot/Trap): KEEP. 14 answered questions and 26 including 0s. LAST_QUESTION_FILLED=CLOSE. Skips in crew payment section may indicate absence of crew. 44 ft vessel from Maine according to VPS_VESSEL. (***COMMENT***)

52281011K (Dredge_Scallop): KEEP. 17 answered questions and 26 including 0s. LAST_QUESTION_FILLED=CLOSE. Skips in crew payment section may indicate the absence of crew. 39 foot vessel out of Maine according to VPS_VESSEL.
94109460L (Pot/Trap): KEEP. 14 answered questions and 26 including 0s. LAST_QUESTION_FILLED=CLOSE. Skips in crew payment section may indicate absence of crew. 37 ft vessel from Maine according to VPS_VESSEL. Costs from records.
61465754K (Pot/Trap): KEEP. 12 answered questions and 25 including 0s. LAST_QUESTION_FILLED=CLOSE. Skips in crew payment section but indicate no crew in comment box.

14018211K (Pot/Trap): 12 answered questions and 21 including 0s. LAST_QUESTION_FILLED=Q11. All -969696969 starting at vehicle_usage_cost. Lean towards exclude.
62326767E (Pot/Trap): 16 answered questions and 21 including 0s. LAST_QUESTION_FILLED=Q11. All -969696969 starting at vehicle_usage_cost. Lean towards exclude.
09800284G (Pot/Trap): 11 answered questions and 19 including 0s. LAST_QUESTION_FILLED=Q11. All -969696969 starting at vehicle_usage_cost. Lean towards exclude.
43954059J (Pot/Trap): 14 answered questions and 19 including 0s. LAST_QUESTION_FILLED=Q9. All -969696969 starting at captain_status. Lean towards exclude.
79802637A (Trawl): 11 answered questions and 19 including 0s. LAST_QUESTION_FILLED=Q12. All -969696969 starting at captain_status. Lean towards exclude.
79892434H (Pot/Trap): 14 answered questions and 19 including 0s. LAST_QUESTION_FILLED=Q9. All -969696969 starting at crew_pymt_sys_other_descr. Lean towards exclude.
98093667H (Pot/Trap): 14 answered questions and 19 including 0s. LAST_QUESTION_FILLED=Q9. All -969696969 starting at crew_pymt_sys_other_descr. Lean towards exclude.
12035781B (Pot/Trap): 12 answered questions and 16 including 0s. LAST_QUESTION_FILLED=CLOSE. Skipped RMUI section. Lean towards exclude.*/

